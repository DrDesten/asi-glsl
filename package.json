{
	"name": "asi-glsl",
	"displayName": "ASI for GLSL",
	"description": "Adds Automatic Semicolon Insertion to GLSL",
	"publisher": "DrDesten",
	"version": "2.1.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/DrDesten/asi-glsl.git"
	},
	"engines": {
		"vscode": "^1.66.0"
	},
	"categories": [
		"Formatters"
	],
	"icon": "Icon.png",
	"keywords": [
		"asi",
		"automatic semicolon insertion",
		"lazy glsl"
	],
	"activationEvents": [
		"onLanguage:glsl"
	],
	"main": "./extension.js",
	"type": "commonjs",
	"contributes": {
		"commands": [],
		"configuration": {
			"title": "ASI for GLSL",
			"properties": {
				"asi-glsl.useLegacyRegex": {
					"type": "boolean",
					"default": false,
					"description": "Extension uses regex to provide its features."
				},
				"asi-glsl.addSemicolons": {
					"type": "boolean",
					"default": true,
					"description": "Extension adds semicolons when formatting"
				},
				"asi-glsl.addColons": {
					"type": "boolean",
					"default": true,
					"description": "Extension adds colons when formatting. Incompatible with `Use Legacy Regex`."
				},
				"asi-glsl.addParentheses": {
					"type": "boolean",
					"default": true,
					"description": "Extension adds parentheses when formatting. Incompatible with `Use Legacy Regex`."
				},
				"asi-glsl.addExplicitTypeConversions": {
					"type": "boolean",
					"default": true,
					"description": "If the extension detects a type error that can be fixed using an explicit type conversion, it will add the corresponding type conversion. Incompatible with `Use Legacy Regex`."
				},
				"asi-glsl.addArgumentParentheses": {
					"type": "boolean",
					"default": true,
					"description": "Extension adds parentheses to `if` and `for` statements when formatting. Disabled unless `Use Legacy Regex`."
				},
				"asi-glsl.lazyFor": {
					"type": "boolean",
					"default": false,
					"description": "Shorthand `for` syntax. Extension converts `for (int i < x) {` into `for (int i = 0; i < x; i++) {`. A type for the iterator can be specified, default is `int`. Disabled unless `Use Legacy Regex`."
				},
				"asi-glsl.lazyConstructors": {
					"type": "boolean",
					"default": false,
					"description": "Shorthand vector and matrix initialisation syntax. Extension converts `vecn var = 0` into `vecn var = vecn(0)`. Also works with matrix constructors. Disabled unless `Use Legacy Regex`."
				}
			}
		}
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.66.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"eslint": "^8.11.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.2",
		"typescript": "^4.5.5",
		"@vscode/test-electron": "^2.1.3"
	}
}